name: Provision Database

on:
  workflow_dispatch:
    inputs:
      run_seed:
        description: 'Run seed data'
        required: true
        default: 'true'
        type: boolean

jobs:
  provision:
    name: Provision Supabase Database
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install psycopg2-binary python-dotenv
    
    - name: Run Schema Migration
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        python << EOF
        import psycopg2
        import os
        from urllib.parse import urlparse
        
        database_url = os.getenv('DATABASE_URL')
        result = urlparse(database_url)
        
        conn = psycopg2.connect(
            database=result.path[1:],
            user=result.username,
            password=result.password,
            host=result.hostname,
            port=result.port
        )
        
        cursor = conn.cursor()
        
        print("Executing 00_schema.sql...")
        with open('supabase/migrations/00_schema.sql', 'r', encoding='utf-8') as f:
            cursor.execute(f.read())
            conn.commit()
        print("âœ“ Schema created")
        
        print("Executing 01_rls.sql...")
        with open('supabase/migrations/01_rls.sql', 'r', encoding='utf-8') as f:
            cursor.execute(f.read())
            conn.commit()
        print("âœ“ RLS policies applied")
        
        cursor.close()
        conn.close()
        print("âœ“ Database provisioned successfully!")
        EOF
    
    - name: Run Seed Data
      if: ${{ github.event.inputs.run_seed == 'true' }}
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        python << EOF
        import psycopg2
        import os
        from urllib.parse import urlparse
        
        database_url = os.getenv('DATABASE_URL')
        result = urlparse(database_url)
        
        conn = psycopg2.connect(
            database=result.path[1:],
            user=result.username,
            password=result.password,
            host=result.hostname,
            port=result.port
        )
        
        cursor = conn.cursor()
        
        print("Executing 02_seed.sql...")
        with open('supabase/migrations/02_seed.sql', 'r', encoding='utf-8') as f:
            cursor.execute(f.read())
            conn.commit()
        print("âœ“ Seed data loaded")
        
        cursor.close()
        conn.close()
        EOF
    
    - name: Configure Storage
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        python << EOF
        import psycopg2
        import os
        from urllib.parse import urlparse
        
        database_url = os.getenv('DATABASE_URL')
        result = urlparse(database_url)
        
        conn = psycopg2.connect(
            database=result.path[1:],
            user=result.username,
            password=result.password,
            host=result.hostname,
            port=result.port
        )
        
        cursor = conn.cursor()
        
        print("Executing 03_storage.sql...")
        with open('supabase/migrations/03_storage.sql', 'r', encoding='utf-8') as f:
            cursor.execute(f.read())
            conn.commit()
        print("âœ“ Storage configured")
        
        cursor.close()
        conn.close()
        print("âœ“ All migrations completed successfully!")
        EOF
    
    - name: Summary
      run: |
        echo "## Database Provisioning Complete! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Schema created" >> $GITHUB_STEP_SUMMARY
        echo "âœ… RLS policies applied" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.run_seed }}" == "true" ]; then
          echo "âœ… Seed data loaded" >> $GITHUB_STEP_SUMMARY
        fi
        echo "âœ… Storage configured" >> $GITHUB_STEP_SUMMARY
